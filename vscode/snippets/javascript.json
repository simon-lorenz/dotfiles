{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	"print": {
		"prefix": "print",
		"body": [
			"console.log($1)"
		],
		"description": "Log output to console"
	},
	"logi": {
		"prefix": "logi",
		"body": [
			"logger.info($0)"
		],
		"description": "Log info"
	},
	"logw": {
		"prefix": "logw",
		"body": [
			"logger.warn($0)"
		],
		"description": "Log warning"
	},
	"logd": {
		"prefix": "logd",
		"body": [
			"logger.debug($0)"
		],
		"description": "Log debug"
	},
	"loge": {
		"prefix": "loge",
		"body": [
			"logger.error($0)"
		],
		"description": "Log error"
	},
	"logf": {
		"prefix": "logf",
		"body": [
			"logger.fatal($0)"
		],
		"description": "Log fatal error"
	},
	"anonymous-function": {
		"prefix": "af",
		"body": [
			"($1) => {",
			"	$0",
			"}"
		]
	},
	"async-middleware": {
		"prefix": "am",
		"body": [
			"asyncMiddleware(async (req, res, next) => {",
			"	$0",
			"})"
		]
	},
	"import": {
		"prefix": "im",
		"body": "import $0 from '$1'"
	},
	"import-as": {
		"prefix": "ima",
		"body": "import * as $0 from '$1'"
	},
	"import-destruct": {
		"prefix": "imd",
		"body": "import { $0 } from '$1'"
	},
	"require": {
		"prefix": "req",
		"body": "const $0 = require('$1')"
	},
	"require-destruct": {
		"prefix": "reqd",
		"body": "const { $0 } = require('$1')"
	},
	"throw-error": {
		"prefix": "te",
		"body": "throw new Error('$0')"
	}
}
